Redis cluster:

            ------------------------------
            | master-server |  10.0.1.4  |
            | node-server1  |  10.0.1.5  |
            | node-server2  |  10.0.1.6  |
            ------------------------------

# apt install redis-server redis-sentinel

vim /etc/redis/redis.conf [master server]

bind 127.0.0.1 10.0.1.4
tcp-backlog 4096
#save 900 1
#save 300 10
#save 60 10000

vim /etc/redis/redis.conf [node-server1]

bind 127.0.0.1 10.0.1.5
tcp-backlog 4096
#save 900 1
#save 300 10
#save 60 10000
slaveof 10.0.1.4 6379


vim /etc/redis/redis.conf [node-server2]

bind 127.0.0.1 10.0.1.6
tcp-backlog 4096
#save 900 1
#save 300 10
#save 60 10000
slaveof 10.0.1.4 6379

vim /etc/redis/sentinel.conf  -> [master-server]

bind 10.0.1.4
sentinel monitor mymaster 10.0.1.4 6379 2
sentinel down-after-milliseconds mymaster 5000
sentinel failover-timeout mymaster 6000
sentinel parallel-syncs mymaster 1


vim /etc/redis/sentinel.conf  -> [node-server1]

bind 10.0.1.5
sentinel monitor mymaster 10.0.1.4 6379 2
sentinel down-after-milliseconds mymaster 5000
sentinel failover-timeout mymaster 6000
sentinel parallel-syncs mymaster 1


vim /etc/redis/sentinel.conf  -> [node-server2]

bind 10.0.1.6
sentinel monitor mymaster 10.0.1.4 6379 2
sentinel down-after-milliseconds mymaster 5000
sentinel failover-timeout mymaster 6000
sentinel parallel-syncs mymaster 1



final:  (Three nodes runs )

systemctl restart redis-server redis-sentinel

Check properly working or not


redis-cli set name "jino"
redis-cli get name

redis-cli -p 26379 info sentinel
redis-cli -p 26379 sentinel get-master-addr-by-name mymaster
redis-cli -a foobared info replication



verify the command:
    
   =>  run as master node
   =>  redis-cli -h [master IP] -p 6379 DEBUG sleep 30